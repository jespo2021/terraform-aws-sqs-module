name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  TERRAFORM_VERSION: '1.12.0'

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}

      - name: Configure Git for private repos
        run: |
          git config --global url."https://${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Comment Format Results
        if: github.event_name == 'pull_request' && steps.fmt.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **Terraform Format Check Failed**\n\nPlease run `terraform fmt -recursive` to fix formatting issues.'
            })

      - name: Fail if format check failed
        if: steps.fmt.outcome == 'failure'
        run: exit 1

  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Configure Git for private repos
        run: |
          git config --global url."https://${{ secrets.GH_PAT }}@github.com/".insteadOf "https://github.com/"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.0

      - name: Terraform Init (Module)
        run: terraform init -backend=false

      - name: Terraform Validate (Module)
        run: terraform validate

      - name: Validate Examples
        run: |
          for example in examples/*/; do
            echo "::group::Validating $example"
            cd "$example"
            terraform init -backend=false
            terraform validate
            cd - > /dev/null
            echo "::endgroup::"
          done

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Configure Git for private repos
        run: |
          git config --global url."https://${{ secrets.GH_PAT }}@github.com/".insteadOf "https://github.com/"

      - name: Run Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: terraform
          output_format: cli
          skip_check: CKV_AWS_27,CKV2_AWS_64,CKV_TF_1  # Skip checks not applicable to SQS modules:
          # CKV_AWS_27: SQS encryption - configurable via module
          # CKV2_AWS_64: KMS key policy - example only
          # CKV_TF_1: Commit hash - version tags preferred for modules
        continue-on-error: true

      - name: Comment Security Results
        if: github.event_name == 'pull_request' && steps.checkov.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ **Security Scan Issues Found**\n\nCheckov found potential security issues. Please review the Security tab for details.'
            })
