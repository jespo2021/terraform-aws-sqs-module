name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  validate:
    name: Validate Module
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}

      - name: Configure Git for private repos
        run: |
          git config --global url."https://${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.0

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init and Validate (Module)
        run: |
          terraform init -backend=false
          terraform validate

      - name: Validate Examples
        run: |
          for example in examples/*/; do
            echo "::group::Validating $example"
            cd "$example"
            terraform init -backend=false
            terraform validate
            cd - > /dev/null
            echo "::endgroup::"
          done

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}

      - name: Setup Git Authentication
        uses: InterVision/devops-github-library/github-actions/setup-git-auth@main
        with:
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}

      - name: Semantic Release
        id: release
        uses: InterVision/devops-github-library/github-actions/semantic-release@main
        with:
          github-token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}
          release-branches: 'main'
          github-release: 'true'
          changelog-file: 'CHANGELOG.md'
          tag-format: '${version}'
          npm-publish: 'false'

      - name: Release Summary
        if: steps.release.outputs.release-published == 'true'
        run: |
          echo "ðŸŽ‰ Released version ${{ steps.release.outputs.version-released }}"
          echo "ðŸ”— Release URL: ${{ steps.release.outputs.release-url }}"
          echo "## ðŸŽ‰ Terraform Module Released" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: ${{ steps.release.outputs.version-released }}" >> $GITHUB_STEP_SUMMARY
          echo "**Release URL**: ${{ steps.release.outputs.release-url }}" >> $GITHUB_STEP_SUMMARY
