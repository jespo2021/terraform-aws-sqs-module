# Terraform Module .gitignore

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*.tfplan

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Terraform lock file (include this in version control for modules)
# .terraform.lock.hcl

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Code quality tools

# Documentation build
docs/_build/

# Temporary files
*.tmp
*.temp
*.log
*.bak

# Generated import commands
import-commands.sh
import-commands.bat

# Generated backup configurations (if any)
# backup-*.yaml

# Test artifacts
test-results/
*.test

# Local development files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Node.js (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Terraform documentation (if auto-generated)
# Uncomment if you auto-generate docs
# README.md

# Local configuration overrides
local.tf
local.tfvars
dev.tfvars
test.tfvars

# Sensitive files that should never be committed
*.pem
*.key
*.crt
*.p12
*.pfx
secrets.yaml
secrets.yml

# Backup files
*.backup
*.bck

# Archive files
*.zip
*.tar.gz
*.rar

# Just build artifacts
.just/

